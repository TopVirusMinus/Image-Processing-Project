# -*- coding: utf-8 -*-
"""DIP_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HJ8QdFtDMUQ2_iyYenjstCvHCqOLj7Xh
"""

import cv2
import math
import numpy as np
from google.colab.patches import cv2_imshow

def Get_Final(image,Image_After):
  Image_Final=np.zeros((image.shape[0],image.shape[1]))
  i=0
  k=0
  for r in range(1,Image_After.shape[0]-1):
    for c in range(1,Image_After.shape[1]-1):
      Image_Final[i,k]=Image_After[r,c]
      k+=1
    
    i+=1
    k=0

  print("Image_Before:")
  cv2_imshow(image)
  print(" ")
  print("Image_After:")
  cv2_imshow(Image_Final)

"""# Reading an image"""

image = cv2.imread('/content/drive/MyDrive/Photo_3.jpg',0)
cv2_imshow(image)

"""# Image Padding"""

img=np.zeros((image.shape[0]+2,image.shape[1]+2))

for i in range(1,image.shape[0]+1):
  for k in range(1,image.shape[1]+1):
    img[i,k]=image[i-1][k-1]

cv2_imshow(img)

"""# Median Filter"""

kernel=[]
k=3
r2=0
c2=0
Image_After=np.zeros((img.shape[0],img.shape[1]))

while r2 <= img.shape[0]-k:
  kernel.clear()
  
  for r in range(r2,r2+k):
    for c in range(c2,c2+k):
      Image_After[r,c] = img[r,c]
      
      if r !=r2+1 and c!=c2+1: 
        kernel.append(img[r,c])
  
  kernel.sort()
  Image_After[r2+1,c2+1] = kernel[math.ceil(len(kernel)/2)]

  if c2 == img.shape[1]-k:
    c2=0
    r2+=1
  else:
    c2+=1

Get_Final(image,Image_After)

"""# Averaging Filter"""

kernel=0
k=3
r2=0
c2=0
Image_After=np.zeros((img.shape[0],img.shape[1]))

while r2 <= img.shape[0]-k:

  kernel=0
  
  for r in range(r2,r2+k):
    for c in range(c2,c2+k):
      kernel+=img[r,c]
  
  Image_After[r2+1,c2+1] = kernel/9 

  if c2 == img.shape[1]-k:
    c2=0
    r2=r2+1
  else:
    c2=c2+1

Get_Final(image,Image_After)